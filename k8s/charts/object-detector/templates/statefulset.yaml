#
# Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#

{{- if $.Values.enabled }}
{{- range $s := until (int $.Values.global.pravega.numStreams) }}
{{- range $r := until (int $.Values.numReadersPerStream) }}

{{- $alias := "" }}
{{- if $.Values.alias }}
  {{- $alias = print "-" $.Values.alias }}
{{- end }}

{{- $streamSuffix := "" }}
{{- if (gt (int $.Values.global.pravega.numStreams) 1) }}
  {{- $streamSuffix = print "-" $s }}
{{- end }}
{{- $suffix := print $streamSuffix "-" $r }}

{{- $name := print $.Release.Name $alias $suffix }}

{{- if not $.Values.useGStreamerOperator }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $name }}
  labels: 
    release: {{ $name }}
spec:
  serviceName: {{ $name }}
  selector:
    matchLabels:
      release: {{ $name }}
  template:
    metadata:
      labels:
        release: {{ $name }}
    spec:
      serviceAccount: {{ $.Release.Namespace }}-pravega
      nodeSelector:
        # Manually distribute across nodes to ensure equal GPU usage.
        kubernetes.io/hostname: "node{{ add 1 (mod (add (mul $s $.Values.numReadersPerStream) $r) $.Values.numNodes) }}"
      containers:
      - name: gstreamer
        image: {{ $.Values.image.repository | quote }}
        imagePullPolicy: {{ $.Values.image.pullPolicy | quote }}
        resources:
{{ toYaml $.Values.resources | indent 10 }}  
        startupProbe:
          httpGet:
            path: /ishealthy
            port: 8080
          periodSeconds: 3
        readinessProbe:
          httpGet:
            path: /ishealthy
            port: 8080
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /ishealthy
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 3
        workingDir: /usr/src/gstreamer-pravega
        command: ["bash", "-c", "--"]
        args:
          - mkdir -p ${LOG_DIR} &&
            ${ENTRYPOINT} |& tee ${LOG_DIR}/${INPUT_STREAM}_${HOSTNAME}.log
        env:
        - name: LOG_DIR
          value: "/mnt/logs/test-logs"
        - name: INPUT_STREAM
          value: "{{ $.Values.global.pravega.stream }}{{ $streamSuffix }}"
        - name: RECOVERY_TABLE
          value: "{{ $name }}-recovery"
        {{- range $key, $value := $.Values.appParametersStatefulSet }}
        - name: {{ $key | quote }}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value := $.Values.appParameters }}
        - name: {{ $key | quote }}
          value: {{ $value | quote }}
        {{- end }}
        volumeMounts:
        - mountPath: /mnt/logs/
          name: logs
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: {{ $.Values.logPersistentVolumeClaimName }}
---

{{- else }}

apiVersion: gstreamer.dellemc.com/v1alpha1
kind: GStreamerPipeline
metadata:
  name: {{ $name }}
spec:
  image: {{ $.Values.image.repository | quote }}
  pullPolicy: {{ $.Values.image.pullPolicy | quote }}
  livenessProbe:
    enabled: {{ $.Values.healthCheck.enabled }}
  env:
  - name: INPUT_STREAM
    value: "{{ $.Values.global.pravega.stream }}{{ $streamSuffix }}"
  - name: RECOVERY_TABLE
    value: "{{ $name }}-recovery"
  {{- if $.Values.healthCheck.enabled }}
  - name: HEALTH_CHECK_ENABLED
    value: "true"
  - name: HEALTH_CHECK_IDLE_SECONDS
    value: {{ $.Values.healthCheck.idleSeconds | quote }}
  {{- end }}
  {{- range $key, $value := $.Values.appParameters }}
  - name: {{ $key | quote }}
    value: {{ $value | quote }}
  {{- end }}
  resources:
{{ toYaml $.Values.resources | indent 4 }}  
  state: Running
---

{{- end }}
{{- end }}
{{- end }}
{{- end }}
